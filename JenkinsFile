pipeline {
    agent any

    stages {
        stage('Abort previous running builds') {
            steps {
                abortPreviousRunningBuilds()
            }
        }
        
        stage('Build') {
            steps {
                sleep(5)
            }
        }
        
        stage('Test') {
            steps {
                sleep(5)
            }
        }
    }
}

def abortPreviousRunningBuilds() {
    def previousBuild = currentBuild.getRawBuild().getPreviousBuildInProgress()
    while (previousBuild != null) {
        if (previousBuild.isInProgress()) {
            def executor = previousBuild.getExecutor()
            if (executor != null) {
                echo ">> Aborting older build #${previousBuild.number}"
                executor.interrupt(Result.ABORTED, new CauseOfInterruption.UserInterruption("Aborted by newer build #${currentBuild.number}"))
            }
        }
        previousBuild = previousBuild.getPreviousBuildInProgress()
    }
}